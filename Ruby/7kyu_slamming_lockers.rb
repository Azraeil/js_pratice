=begin
題目:
內容好長，不過理解後大概是這樣
每一道鎖有兩個狀態，分別是 0 關著，1 開著
每跑一輪就多跳一個鎖，所以第 n 輪就只會碰 n 個鎖
也就是說，如果 n = 5
跑過第一輪之後鎖的狀態是
[1, 1, 1, 1, 1]
第二輪之後鎖的狀態是
[1, 0, 1, 0, 1]
第三輪之後鎖的狀態是
[1, 0, 0, 0, 1]
第四輪之後鎖的狀態是
[1, 0, 0, 1, 1]
第五輪之後鎖的狀態是
[1, 0, 0, 1, 0]
從測試例子與上面的前四輪案例可以發現
在 第 n 輪的開著的鎖會是小於 n 的平方數
---
解法:
從 1 的平方, 開始數直到 該平方數大於 n
並且把這些平方數都放到陣列裡
=end
def locker_run lockers
  i = 1
  result = []
  until i**2 > lockers
    result << i**2
    i += 1
  end

  return result
end
